version: '2'

services:
  nginx:
    restart: always
    image: nginx
    container_name: nginx
    ports:
      - '${HTTP_PORT}:80'
      - '${HTTPS_PORT}:443'
    volumes:
      - '/etc/nginx/conf.d'
      - '/etc/nginx/vhost.d'
      - '/usr/share/nginx/html'
      - './volumes/proxy/certs:/etc/nginx/certs:ro'

  nginx-gen:
    restart: always
    image: jwilder/docker-gen
    container_name: nginx-gen
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
      - './volumes/proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro'
    volumes_from:
      - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - './volumes/proxy/certs:/etc/nginx/certs:rw'
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen

  web:
    restart: always
    image: odoo:12.0
    container_name: odoo
    depends_on:
      - db
    ports:
      - '8069:8069'
    volumes:
      - '${MOUNT_WEB}:/var/lib/odoo'
      - '${MOUNT_CONFIG}:/etc/odoo'
      - '${MOUNT_ADDONS}:/mnt/extra-addons'
    environment:
      - VIRTUAL_HOST=odoo, odoochat
      - VIRTUAL_NETWORK=nginx-proxy
      - VIRTUAL_PORT=8069, 8072
      - LETSENCRYPT_HOST=samplewebsite.example.com
      - LETSENCRYPT_EMAIL=test@example.com
  db:
    restart: always
    image: postgres:10
    environment:
      - POSTGRES_PASSWORD:
      - POSTGRES_USER:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - '${MOUNT_DB}:/var/lib/postgresql/data/pgdata'
